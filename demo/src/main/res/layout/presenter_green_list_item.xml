<?xml version="1.0" encoding="utf-8"?>
<!--
  ~   Copyright 2016 Robert LaThanh
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<layout xmlns:android="http://schemas.android.com/apk/res/android">
  <data>
    <import type="android.view.View"/>

    <variable
        name="adaptableViewModel"
        type="org.lathanh.android.mvp.demo.presenter.PresenterDemo_GreenPresenter.GreenAdaptableViewModel"/>
  </data>

  <RelativeLayout
      android:layout_width="match_parent"
      android:layout_height="wrap_content">

  <!-- == Content ======================================================= -->
  <!--
    - TODO-XX- How to get rid of flicker?
    - The visibility expression will always evaluate to View.GONE at first
    - (because adaptableViewModel.viewModel == null at first).
    - However, it appears that the initial value given to the layout is
    - VISIBLE until the expression is evaluated a fraction of a second later.
    - This results in the user seeing the content (empty) for a fraction of
    - a second before it transitions to the loading state - a "flicker" - it
    - was supposed to be in from the start.
    - Can the visibility be 'GONE' initially, until the statement is
    - evaluated?
    -->
  <RelativeLayout
      android:id="@+id/content"
      android:layout_width="match_parent"
      android:layout_height="wrap_content"
      android:background="@android:drawable/edit_text"
      android:visibility="@{adaptableViewModel.viewModel != null ? View.VISIBLE : View.GONE}">

    <CheckBox
        android:id="@+id/checked"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:checked='@{adaptableViewModel.viewModel.isSelected}'/>

    <TextView
        android:id="@+id/label"
        android:text="@{adaptableViewModel.viewModel.title}"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_toEndOf="@id/checked"
        android:layout_marginStart="8dp"
        android:textSize="16sp"
        android:textStyle="bold"
        android:textColor="#33cc33"/>

    <TextView
        android:text="@{adaptableViewModel.viewModel.description}"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_toEndOf="@id/label"
        android:layout_marginStart="16dp"
        android:textSize="16sp"
        android:textColor="#336633"/>

  </RelativeLayout>

    <!-- == Loading placeholder ============================================= -->
    <TextView
        android:id="@+id/loadingView"
        android:visibility="@{adaptableViewModel.viewModel != null ? View.GONE : View.VISIBLE}"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingTop="20dp"
        android:paddingBottom="20dp"
        android:background="@android:drawable/edit_text"
        android:text="..."
        android:gravity="center"
        android:textColor="#999999"
        android:textSize="@dimen/list_item_progress_text_size"/>

  </RelativeLayout>
</layout>